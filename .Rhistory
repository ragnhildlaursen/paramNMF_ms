#########################################
## Plot of models for BRCA 214
#########################################
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
library(grid)
setwd("~/projects/paramNMF_ms/")
################################### UCUT model plot ---------------------------------------------------------
source("UCUT/loadUCUTmodels.R")
load("UCUT/UCUTmodelsummary.RData")
noSig = 2
# parameter order
prm_order = order(resMat[,"nprmtot"])
prm_order2 = order(resMat[,"nprm1"],resMat[,"nprm2"])
prm_order2 = order(resMat[,4], decreasing = T)
gkl = resMat[,"GKL"]
noModels = nrow(resMat)
diff = diff(range(gkl))/10
dat1 = data.frame(idx = c(1:length(gkl)), gkl = gkl[prm_order2], sigty = resMat[prm_order2,c(1:noSig)])
dat2 = reshape(dat1, varying = colnames(dat1)[-c(1,2)], direction = "long")
dat2$sigty = factor(dat2$sigty, levels = c(18,48,66,96,102,1536))
#dat2$bic = 2*dat2$gkl + log(nrow(V)*ncol(V))*(resMat[prm_order2,"nprmtot"])
dat2$bic = 2*dat2$gkl + log(sum(V > 0.5))*(resMat[prm_order2,"nprmtot"])
mC = (max(dat2$gkl) - min(dat2$gkl))/(max(dat2$bic) - min(dat2$bic))
dat2$bic = dat2$bic* mC
addC = min(dat2$gkl) - min(dat2$bic)
dat2$bic = dat2$bic + addC
dat2$sigty2 = dat2$sigty
dat2$sigty2[8] = 96
dat2$sigty2[29] = 102
dat2$sigty2[5] = 96
dat2$sigty2[26] = 48
datparam = data.frame(idx = c(1:nrow(resMat)), param = resMat[prm_order2,"nprmtot"], y = max(gkl)+diff/1.2)
p = ggplot(dat2, aes(x = idx, y = gkl))+
#geom_vline(xintercept = 16, lty = "dashed")+
geom_point(size =3)+
geom_line()+
geom_point(aes(x = idx, y = max(gkl)+diff+diff/1.8*rep(c(1:noSig),each = noModels), col = dat2$sigty2), shape = 15, size = 4)+
geom_text(datparam, mapping = aes(x = idx, y = y, label = param), size = 3.5)+
geom_point(aes(x = idx, y = bic), col = "palegreen4")+
geom_line(aes(x = idx, y = bic), col = "palegreen4")+
xlab("Possible interaction models")+
ylab("Generalized Kullback-Leibler (GKL)")+
# geom_segment(aes(x = 18, y = 10200, xend = 18, yend = 10500),
#              arrow = arrow(length = unit(0.28, "cm")))+
# geom_text(data = data.frame(x = 18, y = 10000), mapping = aes(x = x, y = y, label = "Total parameters"), fontface = "italic", col = "black")+
theme_bw()+
theme(legend.position = c(0.15,0.39),
legend.text.align = 0.5,
legend.title = element_text(face = "bold"),
#legend.background = element_blank()
#legend.title.align = 0.5
)+
scale_color_manual(values = brewer.pal(n = 6, name = "Dark2"),
labels = c(expression(L[2] + L[1] + M + R[1] + R[2]),
expression(L[2] + L[1]%*%M + M%*%R[1] + R[2]),
expression(L[2]%*%L[1] + L[1]%*%M + M%*%R[1] + R[1]%*%R[2]),
expression(L[1]%*%M%*%R[1]),
expression(L[2] + L[1]%*%M%*%R[1] + R[2]),
expression(L[2]%*%L[1]%*%M%*%R[1]%*%R[2])),
name = "Signature factorization")+
geom_vline(xintercept = c(1.5,3.5,6.5,10.5,15.5), linetype = "dashed", color = "darkgray")+
scale_y_continuous(
# Features of the first axis
name = "Generalized Kullback-Leibler (GKL)",
# Add a second axis and specify its features
sec.axis = sec_axis(~(.-addC)/mC, name="Bayesian Information Criteria (BIC)")
) +
theme(
axis.title.y = element_text(color = "black", size=13),
axis.title.y.right = element_text(color = "palegreen4", size=13)
)+
scale_x_discrete(breaks = c(1:15))+
geom_point(aes(x = which.min(dat2$bic), y = dat2$bic[which.min(dat2$bic)]), color = "palegreen4", pch = 1, size = 6 )
p
rm(list=ls())
setwd("~/projects/paramNMF_ms")
##############################################################
## Plot robustness of signatures
##############################################################
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
load("UCUT/SimilaritySignaturesUCUTparamboot.RData")
order = c(1,2)
noSig = nrow(ResCosineMatMono)
# Transforming data
datPenta = data.frame(s = t(ResCosineMatPenta[order,]), type = "Penta")
#datTri = data.frame(s = t(ResCosineMatTri[order,]), type = "Tri")
#m = cosMatch(TriRes$Signatures, MixRes$Signatures)$match
#datMix = data.frame(s = t(ResCosineMatMix[order,]), type = "Mix")
#m = cosMatch(TriRes$Signatures, DiRes$Signatures)$match
datDi = data.frame(s = t(ResCosineMatDi[order,]), type = "Di")
#m = cosMatch(TriRes$Signatures, MonoRes$Signatures)$match
datMono = data.frame(s = t(ResCosineMatMono[order,]), type = "Mono")
#dat1 = rbind(datTri,datDi,datMix,datMono)
dat1 = rbind(datPenta,datDi,datMono)
dat2 = reshape(dat1, varying = colnames(dat1)[1:noSig], direction = "long")
#dat2$type = factor(dat2$type, levels = c("Mono","Di","Mix","Tri"))
dat2$type = factor(dat2$type, levels = c("Mono","Di","Penta"))
##------------------------------------------------------------------
## Compare true signatures and estimated signatures
##------------------------------------------------------------------
colors3 = c("#AC0136", "#FF9912","#A895CD", "#27408B")
colors3 = c("#AC0136","#FF9912", "#436EEE", "#27408B")
colors3 = brewer.pal(n = 6, name = "Dark2")[c(1,3,6)]
# plot in one plot
sig.labs <- paste("Signature",1:noSig)
names(sig.labs) <- c(1:noSig)
ggplot(dat2, aes(x=type, y=s, fill=type, col = type)) +
#geom_violin(position=position_dodge(1), scale = "width") +
#geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5) +
#geom_jitter()+
geom_boxplot()+
facet_wrap(~time, nrow = 4, scales = "free_y", labeller = labeller(time = sig.labs))+
scale_color_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
scale_fill_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
xlab("Interaction model")+
ylab("Cosine similarity")+
theme_bw()+
theme(legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(hjust = 0, face = "bold"))
ggplot(dat2, aes(x=type, y=s, fill=type, col = type)) +
#geom_violin(position=position_dodge(1), scale = "width") +
#geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5) +
#geom_jitter()+
geom_boxplot()+
facet_wrap(time~, nrow = 4, scales = "free_y", labeller = labeller(time = sig.labs))+
scale_color_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
scale_fill_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
xlab("Interaction model")+
ylab("Cosine similarity")+
theme_bw()+
theme(legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(hjust = 0, face = "bold"))
ggplot(dat2, aes(x=type, y=s, fill=type, col = type)) +
#geom_violin(position=position_dodge(1), scale = "width") +
#geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5) +
#geom_jitter()+
geom_boxplot()+
facet_wrap(time~., nrow = 4, scales = "free_y", labeller = labeller(time = sig.labs))+
scale_color_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
scale_fill_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
xlab("Interaction model")+
ylab("Cosine similarity")+
theme_bw()+
theme(legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(hjust = 0, face = "bold"))
ggplot(dat2, aes(x=type, y=s, fill=type, col = type)) +
#geom_violin(position=position_dodge(1), scale = "width") +
#geom_dotplot(binaxis='y', stackdir='center', dotsize=0.5) +
#geom_jitter()+
geom_boxplot()+
facet_wrap(time~., nrow = 1, scales = "free_y", labeller = labeller(time = sig.labs))+
scale_color_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
scale_fill_manual(values = colors3, labels = c("Mono","Di",'Mix',"Tri"),
name = "Interaction model")+
xlab("Interaction model")+
ylab("Cosine similarity")+
theme_bw()+
theme(legend.position = "none",
strip.background = element_blank(),
strip.text = element_text(hjust = 0, face = "bold"))
rm(list=ls())
setwd("~/projects/paramNMF_ms")
###################################
## Plotting signatures
###################################
library(ggplot2)
library(ggpubr)
library(RColorBrewer)
source("~/projects/paramNMF_ms/GitModelSelection.R")
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
source("UCUT/loadUCUTmodels.R")
resMono = resFactors[[1]]
resMix = resFactors[[5]]
resDi = resFactors[[19]]
resPenta = resFactors[[21]]
mMono = cosMatch(resPenta$signatures, resMono$signatures)$match
mDi = cosMatch(resPenta$signatures, resDi$signatures)$match
mMix = cosMatch(resPenta$signatures, resMix$signatures)$match
noSig = 2
sub = factor(rep(c("C > A","C > G","C > T","T > A","T > C","T > G"), each = 256))
# mono
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resMono$signatures[mMono,]))
dat$type = "mono"
datmono = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
# di
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resDi$signatures[mDi,]))
dat$type = "di"
datdi = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
# penta
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resPenta$signatures))
dat$type = "penta"
datpenta = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
# mix
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resMix$signatures[mMix,]))
dat$type = "mix"
datdi = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
datall = rbind(datmono,datdi,datpenta)
col.sub = c("#800080", "#FF9912", "#436EEE", "#ffdf12", "#27408B", "#E066FF")
datall$comb = paste0(datall$time,datall$sub)
datall$type = factor(datall$type, levels = c("mono","di","penta"))
colors3 = brewer.pal(n = 6, name = "Dark2")[c(1,3,6)]
plots = list()
for(sig in 1:noSig){
plots[[sig]] = ggplot(datall[datall$Signature == sig, ], aes(x = m, y = true, fill = type))+
geom_bar(stat = "identity", width = 0.5)+
facet_grid(rows = vars(type), cols = vars(sub), scale = "free_x", switch = "x")+
#theme_bw()+
theme(text = element_text(size=8, face = "bold"),
axis.text.x=element_blank(),
strip.text = element_blank(),
axis.ticks.x = element_blank(),
#legend.position = "none",
#strip.text.y.right = element_text(angle = -90, size = 8),
strip.background.x = element_rect(color="black", fill="white",linetype="blank"),
strip.text.x = element_text(size = 9), panel.spacing.x = unit(0.2,"line"))+
ylab("")+xlab("")+
ylim(0,0.03)+
ggtitle(paste("Signature",sig))+
scale_y_continuous(labels = scales::percent_format(accuracy = 1), n.breaks = 3)+
scale_fill_manual(values = colors3, labels = c("Mono","Di","Penta"),
name = "Interaction model")
}
for(sig in 1:noSig){
plots[[sig]] = ggplot(datall[datall$Signature == sig, ], aes(x = m, y = true, fill = type))+
geom_bar(stat = "identity", width = 0.5)+
facet_grid(rows = vars(type), cols = vars(sub), scale = "free_x", switch = "x")+
#theme_bw()+
theme(text = element_text(size=8, face = "bold"),
axis.text.x=element_blank(),
strip.text = element_blank(),
axis.ticks.x = element_blank(),
#legend.position = "none",
#strip.text.y.right = element_text(angle = -90, size = 8),
strip.background.x = element_rect(color="black", fill="white",linetype="blank"),
strip.text.x = element_text(size = 9), panel.spacing.x = unit(0.2,"line"))+
ylab("")+xlab("")+
ylim(0,0.03)+
ggtitle(paste("Signature",sig))+
#scale_y_continuous(labels = scales::percent_format(accuracy = 1), n.breaks = 3)+
scale_fill_manual(values = colors3, labels = c("Mono","Di","Penta"),
name = "Interaction model")
}
ggarrange(plots[[1]],plots[[2]], ncol = 2, common.legend = T, legend = "bottom")
# mono
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resMono$signatures[mMono,]))
dat$type = "mono"
datmono = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
# di
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resDi$signatures[mDi,]))
dat$type = "di"
datdi = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
# penta
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resPenta$signatures))
dat$type = "penta"
datpenta = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
# mix
dat = data.frame(m = factor(colnames(V), levels=unique(colnames(V))), sub, S =  t(resMix$signatures[mMix,]))
dat$type = "mix"
datmix = reshape(dat, varying = paste0("S.",c(1:noSig)), direction = "long", v.names = "true", timevar = "Signature")
datall = rbind(datmono,datdi,datpenta)
col.sub = c("#800080", "#FF9912", "#436EEE", "#ffdf12", "#27408B", "#E066FF")
datall$comb = paste0(datall$time,datall$sub)
datall$type = factor(datall$type, levels = c("mono","di","penta"))
colors3 = brewer.pal(n = 6, name = "Dark2")[c(1,3,6)]
plots = list()
for(sig in 1:noSig){
plots[[sig]] = ggplot(datall[datall$Signature == sig, ], aes(x = m, y = true, fill = type))+
geom_bar(stat = "identity", width = 0.5)+
facet_grid(rows = vars(type), cols = vars(sub), scale = "free_x", switch = "x")+
#theme_bw()+
theme(text = element_text(size=8, face = "bold"),
axis.text.x=element_blank(),
strip.text = element_blank(),
axis.ticks.x = element_blank(),
#legend.position = "none",
#strip.text.y.right = element_text(angle = -90, size = 8),
strip.background.x = element_rect(color="black", fill="white",linetype="blank"),
strip.text.x = element_text(size = 9), panel.spacing.x = unit(0.2,"line"))+
ylab("")+xlab("")+
ylim(0,0.03)+
ggtitle(paste("Signature",sig))+
#scale_y_continuous(labels = scales::percent_format(accuracy = 1), n.breaks = 3)+
scale_fill_manual(values = colors3, labels = c("Mono","Di","Penta"),
name = "Interaction model")
}
ggarrange(plots[[1]],plots[[2]], ncol = 1, common.legend = T, legend = "bottom")
sum(datall == NaN)
View(datall)
anyMissing(datall$true)
anyNA(datall$true)
plots = list()
for(sig in 1:noSig){
plots[[sig]] = ggplot(datall[datall$Signature == sig, ], aes(x = m, y = true, fill = type))+
geom_bar(stat = "identity", width = 0.5)+
facet_grid(rows = vars(type), cols = vars(sub), scale = "free_x", switch = "x")+
#theme_bw()+
theme(text = element_text(size=8, face = "bold"),
axis.text.x=element_blank(),
strip.text = element_blank(),
axis.ticks.x = element_blank(),
#legend.position = "none",
#strip.text.y.right = element_text(angle = -90, size = 8),
strip.background.x = element_rect(color="black", fill="white",linetype="blank"),
strip.text.x = element_text(size = 9), panel.spacing.x = unit(0.2,"line"))+
ylab("")+xlab("")+
ylim(0,0.03)+
ggtitle(paste("Signature",sig))+
scale_y_continuous(labels = scales::percent_format(accuracy = 1), n.breaks = 3)+
scale_fill_manual(values = colors3, labels = c("Mono","Di","Penta"),
name = "Interaction model")
}
ggarrange(plots[[1]],plots[[2]], ncol = 1, common.legend = T, legend = "bottom")
View(datmono)
rm(list=ls())
#########################################
## Plot of models for BRCA 214
#########################################
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
library(grid)
################################### UCUT model plot ---------------------------------------------------------
source("UCUT/loadUCUTmodels.R")
load("UCUT/UCUTmodelsummary.RData")
noSig = 2
# parameter order
prm_order = order(resMat[,"nprmtot"])
prm_order2 = order(resMat[,"nprm1"],resMat[,"nprm2"])
prm_order2 = order(resMat[,4], decreasing = T)
gkl = resMat[,"GKL"]
noModels = nrow(resMat)
diff = diff(range(gkl))/10
dat1 = data.frame(idx = c(1:length(gkl)), gkl = gkl[prm_order2], sigty = resMat[prm_order2,c(1:noSig)])
dat2 = reshape(dat1, varying = colnames(dat1)[-c(1,2)], direction = "long")
dat2$sigty = factor(dat2$sigty, levels = c(18,48,66,96,102,1536))
#dat2$bic = 2*dat2$gkl + log(nrow(V)*ncol(V))*(resMat[prm_order2,"nprmtot"])
dat2$bic = 2*dat2$gkl + log(sum(V > 0.5))*(resMat[prm_order2,"nprmtot"])
mC = (max(dat2$gkl) - min(dat2$gkl))/(max(dat2$bic) - min(dat2$bic))
dat2$bic = dat2$bic* mC
addC = min(dat2$gkl) - min(dat2$bic)
dat2$bic = dat2$bic + addC
dat2$sigty2 = dat2$sigty
dat2$sigty2[8] = 96
dat2$sigty2[29] = 102
dat2$sigty2[5] = 96
dat2$sigty2[26] = 48
datparam = data.frame(idx = c(1:nrow(resMat)), param = resMat[prm_order2,"nprmtot"], y = max(gkl)+diff/1.2)
p = ggplot(dat2, aes(x = idx, y = gkl))+
#geom_vline(xintercept = 16, lty = "dashed")+
geom_point(size =3)+
geom_line()+
geom_point(aes(x = idx, y = max(gkl)+diff+diff/1.8*rep(c(1:noSig),each = noModels), col = dat2$sigty2), shape = 15, size = 4)+
geom_text(datparam, mapping = aes(x = idx, y = y, label = param), size = 3.5)+
geom_point(aes(x = idx, y = bic), col = "palegreen4")+
geom_line(aes(x = idx, y = bic), col = "palegreen4")+
xlab("Possible interaction models")+
ylab("Generalized Kullback-Leibler (GKL)")+
# geom_segment(aes(x = 18, y = 10200, xend = 18, yend = 10500),
#              arrow = arrow(length = unit(0.28, "cm")))+
# geom_text(data = data.frame(x = 18, y = 10000), mapping = aes(x = x, y = y, label = "Total parameters"), fontface = "italic", col = "black")+
theme_bw()+
theme(legend.position = c(0.15,0.39),
legend.text.align = 0.5,
legend.title = element_text(face = "bold"),
#legend.background = element_blank()
#legend.title.align = 0.5
)+
scale_color_manual(values = brewer.pal(n = 6, name = "Dark2"),
labels = c(expression(L[2] + L[1] + M + R[1] + R[2]),
expression(L[2] + L[1]%*%M + M%*%R[1] + R[2]),
expression(L[2]%*%L[1] + L[1]%*%M + M%*%R[1] + R[1]%*%R[2]),
expression(L[1]%*%M%*%R[1]),
expression(L[2] + L[1]%*%M%*%R[1] + R[2]),
expression(L[2]%*%L[1]%*%M%*%R[1]%*%R[2])),
name = "Signature factorization")+
geom_vline(xintercept = c(1.5,3.5,6.5,10.5,15.5), linetype = "dashed", color = "darkgray")+
scale_y_continuous(
# Features of the first axis
name = "Generalized Kullback-Leibler (GKL)",
# Add a second axis and specify its features
sec.axis = sec_axis(~(.-addC)/mC, name="Bayesian Information Criteria (BIC)")
) +
theme(
axis.title.y = element_text(color = "black", size=13),
axis.title.y.right = element_text(color = "palegreen4", size=13)
)+
scale_x_discrete(breaks = c(1:15))+
geom_point(aes(x = which.min(dat2$bic), y = dat2$bic[which.min(dat2$bic)]), color = "palegreen4", pch = 1, size = 6 )
p
colors3 = c(brewer.pal(n = 6, name = "Dark2"),"#436EEE")
dattext = data.frame(xp = c(1,11,15,21), yp = 11400, type = c("Mono","Mix", "Di", "Penta"))
#yval1 = 79200
#yval2 = 89000
yval1 = 10860
yval2 = 11250
p + geom_rect(aes(xmin = 0.78, xmax = 1.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[1])+
geom_rect(aes(xmin = 14.78, xmax = 15.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[3])+
geom_rect(aes(xmin = 20.78, xmax = 21.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[6])+
geom_rect(aes(xmin = 10.78, xmax = 11.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[7])+
geom_text(dattext,mapping = aes(x = xp, y = yp, label = type), size = 3.5, fontface = "plain")
colors3 = c(brewer.pal(n = 6, name = "Dark2"),"#436EEE")
dattext = data.frame(xp = c(1,15,21), yp = 11400, type = c("Mono", "Di", "Penta"))
#yval1 = 79200
#yval2 = 89000
yval1 = 10860
yval2 = 11250
p + geom_rect(aes(xmin = 0.78, xmax = 1.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[1])+
geom_rect(aes(xmin = 14.78, xmax = 15.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[3])+
geom_rect(aes(xmin = 20.78, xmax = 21.22, ymin = yval1, ymax = yval2),
fill = "white", alpha = 0, color = colors3[6])+
#geom_rect(aes(xmin = 10.78, xmax = 11.22, ymin = yval1, ymax = yval2),
#          fill = "white", alpha = 0, color = colors3[7])+
geom_text(dattext,mapping = aes(x = xp, y = yp, label = type), size = 3.5, fontface = "plain")
View(resMat)
source("BRCA/loadBRCA214models.R")
View(resMat)
rm(list=ls())
setwd("~/projects/paramNMF_ms")
##############################################################
## Plot robustness of signatures
##############################################################
library(RColorBrewer)
library(ggplot2)
library(ggpubr)
##################
## cosine similarity
load("BRCA/result/SimilarityBRCA214w4sig500iparamboot50.RData")
# BRCA21
source("BRCA/loadBRCA21models.R")
View(resMat)
source("UCUT/loadUCUTmodels.R")
