
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-conda-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #rm(list=ls())
> #setwd("~/projects/paramNMF_ms")
> ################################################################
> ## Robustness of Signatures
> ################################################################
> # library(foreach)
> # library(doParallel)
> # library(parallel)
> # 
> # cores=detectCores()
> # cl <- makeCluster(cores[1]-1)
> #library(ggplot2)
> #library(ggpubr)
> source("loadBRCA214models.R")
> 
> MonoRes = resFactors[[1]]
> MixRes = resFactors[[13]]
> DiRes = resFactors[[37]]
> TriRes = resFactors[[45]]
> 
> mMono = cosMatch(TriRes$signatures, MonoRes$signatures)$match
> mMix = cosMatch(TriRes$signatures, MixRes$signatures)$match
> mDi = cosMatch(TriRes$signatures, DiRes$signatures)$match
> 
> ##-----------------------------------------------------------------------
> ## Sample a number of mutations from each patient (downsampling)
> ##-----------------------------------------------------------------------
> sampleV <- V
> nG <- dim(V)[1]     # Number of patients (genomes)
> nMtTps <- dim(V)[2] # Number of mutation types
> nMt <- rowSums(V)
> noSig = 8
> 
> nSim <- 25  # 5 if small study. 100 if intermediate. 200 if large.
> init = 100   # number of initialisations
> tol = 1e-8
> 
> # TriRes <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = rep(list(Mfull),noSig), tolerance = tol,initial = init)
> # MixRes <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = list(Mfull,Mdi,Mdi,Mmono),tol=tol,initial = init)
> # DiRes <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = rep(list(Mdi),noSig),tolerance = tol,initial = init)
> # MonoRes <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = rep(list(Mmono),noSig),tolerance = tol,initial = init)
> 
> #save(TriRes,DiRes,MonoRes, file = "FactorsBRCA119.RData")
> #cat("GKL Di:", DiRes$gkl, " with convergence ", DiRes$conv, "\n")
> #cat("GKL Mix:", MixRes$gkl, " with convergence ", MixRes$conv, "\n")
> 
> ResCosineMatTri <- matrix(0,nrow=noSig,ncol=nSim) 
> ResCosineMatMix <- matrix(0,nrow=noSig,ncol=nSim) 
> ResCosineMatDi <- matrix(0,nrow=noSig,ncol=nSim) 
> ResCosineMatMono <- matrix(0,nrow=noSig,ncol=nSim)
> 
> #foreach(nsim=1:nSim, .combine=c, .inorder=FALSE,.export = ls(globalenv())) %dopar% {
> for(nsim in 1:nSim){
+   cat(nsim,"out of",nSim,"\n")
+   nSimMt <- rowSums(V) # could potentially downsample
+   for (i in 1:nG){
+     set.seed(NULL)
+     sim <- sample( x=1:nMtTps , size=nSimMt[i], replace=TRUE, prob=V[i,])
+     sampleV[i,] <- tabulate(sim,nbins=nMtTps)
+   }
+   
+   # ResultFixTri <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = rep(list(Mfull),noSig), tol=tol,initial = init)
+   # ResultFixMix <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = list(Mfull,Mdi,Mdi,Mmono),tol=tol,initial = init)
+   # ResultFixDi <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = rep(list(Mdi),noSig),tol=tol,initial = init)
+   # ResultFixMono <- NMFglmSQR(Data = sampleV, NoSignatures = noSig, DesignMatrix = rep(list(Mmono),noSig),tol=tol,initial = init)
+   # cat("GKL Di:", ResultFixDi$gkl, " with convergence ", ResultFixDi$conv, "\n")
+   # cat("GKL Mix:", ResultFixMix$gkl, " with convergence ", ResultFixMix$conv, "\n")
+   
+   ResultFixTri <- nmfprm(data = sampleV, noSignatures = noSig, designMatrices = rep(list(Mfull),noSig), tol=tol,initial = init)
+   ResultFixMix <- nmfprm(data = sampleV, noSignatures = noSig, designMatrices = list(Mmono,Mmono,Mmono,Mmono,Mfull,Mfull,Mdi,Mdi),tol=tol,initial = init)
+   ResultFixDi <- nmfprm(data = sampleV, noSignatures = noSig, designMatrices = rep(list(Mdi),noSig),tol=tol,initial = init)
+   ResultFixMono <- nmfprm(data = sampleV, noSignatures = noSig, designMatrices = rep(list(Mmono),noSig),tol=tol,initial = init)
+   # Compare signatures: Cosine similarity for each patient
+   ResCosineMatTri[,nsim] = cosMatch(TriRes$signatures,ResultFixTri$signatures)$cossim
+   ResCosineMatMix[,nsim] = cosMatch(MixRes$signatures[mMix,],ResultFixMix$signatures)$cossim
+   ResCosineMatDi[,nsim] = cosMatch(DiRes$signatures[mDi,],ResultFixDi$signatures)$cossim
+   ResCosineMatMono[,nsim] = cosMatch(MonoRes$signatures[mMono,],ResultFixMono$signatures)$cossim
+   
+   save(ResCosineMatTri,ResCosineMatMix, ResCosineMatDi,ResCosineMatMono, file = "SimilaritySignaturesBRCA214v2.RData")
+ }
1 out of 25 
Iterations:9979
Iterations:3790
Iterations:3622
2 out of 25 
Iterations:9966
Iterations:4424
3 out of 25 
Iterations:7428
Iterations:7136
Iterations:4870
4 out of 25 
Iterations:7709
Iterations:7901
Iterations:8837
Iterations:3397
5 out of 25 
Iterations:8361
Iterations:6904
Iterations:6777
Iterations:3512
6 out of 25 
Iterations:9921
Iterations:9522
Iterations:3742
7 out of 25 
Iterations:9581
Iterations:2253
8 out of 25 
Iterations:5080
Iterations:8894
Iterations:3934
9 out of 25 
Iterations:4886
Iterations:7601
Iterations:3693
10 out of 25 
Iterations:3748
11 out of 25 
Iterations:8663
Iterations:6722
Iterations:2109
12 out of 25 
Iterations:9880
Iterations:3315
13 out of 25 
Iterations:7354
Iterations:3307
14 out of 25 
Iterations:5536
Iterations:3734
15 out of 25 
Iterations:9269
Iterations:7357
Iterations:4058
slurmstepd: error: *** JOB 61472378 ON s05n15 CANCELLED AT 2022-03-03T13:58:23 ***
